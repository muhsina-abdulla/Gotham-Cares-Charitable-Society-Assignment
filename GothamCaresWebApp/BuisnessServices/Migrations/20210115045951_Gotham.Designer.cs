// <auto-generated />
using System;
using BuisnessServices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BuisnessServices.Migrations
{
    [DbContext(typeof(GothamContext))]
    [Migration("20210115045951_Gotham")]
    partial class Gotham
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BuisnessServices.Entities.Admin", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("BuisnessServices.Entities.Outlet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("FoodPackets")
                        .HasColumnType("integer");

                    b.Property<string>("FoodType")
                        .HasColumnType("text");

                    b.Property<string>("Landmark")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OutletsPerDateDate")
                        .HasColumnType("text");

                    b.Property<int>("RequiredVolunteers")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OutletsPerDateDate");

                    b.ToTable("Outlets");
                });

            modelBuilder.Entity("BuisnessServices.Entities.OutletsPerDate", b =>
                {
                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.HasKey("Date");

                    b.ToTable("OutletDates");
                });

            modelBuilder.Entity("BuisnessServices.Entities.Volunteers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("OutletId")
                        .HasColumnType("uuid");

                    b.Property<int>("Phone")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OutletId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("BuisnessServices.Entities.Outlet", b =>
                {
                    b.HasOne("BuisnessServices.Entities.OutletsPerDate", null)
                        .WithMany("Outlets")
                        .HasForeignKey("OutletsPerDateDate");
                });

            modelBuilder.Entity("BuisnessServices.Entities.Volunteers", b =>
                {
                    b.HasOne("BuisnessServices.Entities.Outlet", "Outlet")
                        .WithMany()
                        .HasForeignKey("OutletId");

                    b.Navigation("Outlet");
                });

            modelBuilder.Entity("BuisnessServices.Entities.OutletsPerDate", b =>
                {
                    b.Navigation("Outlets");
                });
#pragma warning restore 612, 618
        }
    }
}
